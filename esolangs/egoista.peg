##JSoLang Egoista

// Basic Template - Template Básico

main = x:allRules* { return "##miniTidal\n" + x.join("") }
allRules = madrugadas / mañanas / tardes / noches / horas / minutos / segundos / milisegundos / muchos / me / confundo / duermo / quedo / apuro / sacudo / siento / voy / tengo / fuerza / calma / ánimo / serenidad / velocidad / paz / viento / turbulencia / encanto / anyCharacter
anyCharacter = .

// Simple Text Replacement example: - Ejemplo simple de Reemplazo de Texto

muchos = "muchos"i { return "stack" } 
madrugadas = "madrugadas"i { return "slow 0.5 $ every 5 (slow 0.25) $" }
mañanas = "mañanas"i { return "every 2 (rev) $" }
tardes = "tardes"i { return "every 3 (slow 0.75) $" }
noches = "noches"i { return "every 2 (slow 8) $" }
horas = "horas"i { return "brak $" }
minutos = "minutos"i { return "jux (palindrome) $ every 3 (chop 15) $" }
segundos = "segundos"i { return "every 3 (chop 20) $" }
milisegundos = "milisegundos"i { return "foldEvery [3, 4, 5] (density 2) $" }
me = "me"i { return "s" }
confundo = "confundo"i { return " \"[[bd:2, bd:2, bd:3, bd:1, bd] bd:2 bd:2 [bd:3*7]/2 bd:1 bd] hh [hh:3*19]/3\" " }
siento = "siento"i { return " \"[hh, [sn*2] cp sn, arpy:4 arpy:2, arpy [arpy:4 [arpy:1 arpy:2] arpy:3 arpy], odx, ~ cp]\" " }
duermo = "duermo"i { return " \"[off*25 odx led*27]\" " }
apuro = "apuro"i { return " \"sf*12\" " }
tengo = "tengo"i { return "#" }
quedo = "quedo"i { return " \"[hh~ hh:7*2,hh~ hh*2]\" "}
sacudo = "sacudo"i { return " \"[sd(4,8), sn:2(3,8), sd(4,8)]\" "} 
voy = "voy"i { return " \"bd sn*2 hh cp  arpy drum*8\" "}
fuerza = "fuerza"i { return "gain \"1.5\" " }
ánimo = "ánimo"i { return "gain \"1.5 1.2 0.9 2.1 1.3 1.5\" " } 
calma = "calma"i { return "speed (choose [0.1, 0.6, 0.4, 0.7])" }
serenidad = "serenidad"i { return "speed \"0.6 0.5 1.5 0.7 2.25\" " }
velocidad = "velocidad"i { return "speed \"2.6 1.5 0.5 1.7 2.05\" " }
paz = "paz"i { return "pan sine" }
viento = "viento"i { return "n (irand 3)" }
turbulencia = "turbulencia"i { return "n (irand 9)" }
encanto = "encanto"i { return "vowel \"a o u e i i\" "}
